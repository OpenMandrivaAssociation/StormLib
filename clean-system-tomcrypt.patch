diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4d283a3..d329349 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,6 +1,8 @@
 project(StormLib)
 cmake_minimum_required(VERSION 2.8.12)
 
+set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/")
+
 set(LIBRARY_NAME storm)
 
 include(CMakeDependentOption)
@@ -40,8 +42,6 @@ set(SRC_FILES
            src/SFilePatchArchives.cpp
            src/SFileReadFile.cpp
            src/SFileVerify.cpp
-           src/libtomcrypt/src/pk/rsa/rsa_verify_simple.c
-           src/libtomcrypt/src/misc/crypt_libc.c
 )
 
 if(MSVC)
@@ -129,6 +129,8 @@ set(TOMCRYPT_FILES
            src/libtomcrypt/src/pk/rsa/rsa_make_key.c
            src/libtomcrypt/src/pk/rsa/rsa_sign_hash.c
            src/libtomcrypt/src/pk/rsa/rsa_verify_hash.c
+           src/libtomcrypt/src/misc/crypt_libc.c
+           src/libtomcrypt/src/pk/rsa/rsa_verify_simple.c
 )
 
 set(TOMMATH_FILES
@@ -281,6 +283,7 @@ add_definitions(-D_7ZIP_ST -DBZ_STRICT_ANSI)
 if(WIN32)
     set(SRC_ADDITIONAL_FILES ${ZLIB_BZIP2_FILES} ${TOMCRYPT_FILES} ${TOMMATH_FILES})
     set(LINK_LIBS wininet)
+    include_directories("${CMAKE_CURRENT_LIST_DIR}/libtomcrypt/src/headers/")
 else()
     find_package(ZLIB REQUIRED)
     find_package(BZip2 REQUIRED)
@@ -292,8 +295,13 @@ else()
 
     option(WITH_LIBTOMCRYPT "Use system LibTomCrypt library" OFF)
     if(WITH_LIBTOMCRYPT)
-        set(LINK_LIBS ${LINK_LIBS} tomcrypt)
+        find_package(TomCrypt REQUIRED)
+        find_package(TomMath REQUIRED)
+        
+        add_definitions(-DLTM_DESC -DUSE_LTM)
+        set(LINK_LIBS ${LINK_LIBS} ${TomCrypt_LIBRARIES} ${TomMath_LIBRARIES})
     else()
+        include_directories("${CMAKE_CURRENT_LIST_DIR}/libtomcrypt/src/headers/")
         set(SRC_ADDITIONAL_FILES ${TOMCRYPT_FILES} ${TOMMATH_FILES})
     endif()
 endif()
diff --git a/cmake/FindTomCrypt.cmake b/cmake/FindTomCrypt.cmake
new file mode 100644
index 0000000..15523b7
--- /dev/null
+++ b/cmake/FindTomCrypt.cmake
@@ -0,0 +1,10 @@
+find_path(TomCrypt_INCLUDE_DIR "tomcrypt.h")
+find_library(TomCrypt_LIBRARY tomcrypt)
+
+set(TomCrypt_LIBRARIES ${TomCrypt_LIBRARY})
+set(TomCrypt_INCLUDE_DIRS ${TomCrypt_INCLUDE_DIR})
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(TomCrypt DEFAULT_MSG TomCrypt_LIBRARY TomCrypt_INCLUDE_DIR)
+
+mark_as_advanced(TomCrypt_INCLUDE_DIR TomCrypt_LIBRARY)
diff --git a/cmake/FindTomMath.cmake b/cmake/FindTomMath.cmake
new file mode 100644
index 0000000..42214c4
--- /dev/null
+++ b/cmake/FindTomMath.cmake
@@ -0,0 +1,10 @@
+find_path(TomMath_INCLUDE_DIR "tommath.h")
+find_library(TomMath_LIBRARY tommath)
+
+set(TomMath_LIBRARIES ${TomMath_LIBRARY})
+set(TomMath_INCLUDE_DIRS ${TomMath_INCLUDE_DIR})
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(TomMath DEFAULT_MSG TomMath_LIBRARY TomMath_INCLUDE_DIR)
+
+mark_as_advanced(TomMath_INCLUDE_DIR TomMath_LIBRARY)
diff --git a/src/SFileVerify.cpp b/src/SFileVerify.cpp
index e68d51a..4991858 100644
--- a/src/SFileVerify.cpp
+++ b/src/SFileVerify.cpp
@@ -22,6 +22,11 @@
 
 #define MPQ_DIGEST_UNIT_SIZE      0x10000
 
+// tomcrypt < 1.18 uses old naming style
+#if CRYPT < 0x0118
+#define LTC_PKCS_1_V1_5 LTC_LTC_PKCS_1_V1_5
+#endif
+
 //-----------------------------------------------------------------------------
 // Known Blizzard public keys
 // Created by Jean-Francois Roy using OpenSSL
@@ -457,7 +462,7 @@ static DWORD VerifyWeakSignature(
     // Verify the signature
     memcpy(RevSignature, &pSI->Signature[8], MPQ_WEAK_SIGNATURE_SIZE);
     memrev(RevSignature, MPQ_WEAK_SIGNATURE_SIZE);
-    rsa_verify_hash_ex(RevSignature, MPQ_WEAK_SIGNATURE_SIZE, Md5Digest, sizeof(Md5Digest), LTC_LTC_PKCS_1_V1_5, hash_idx, 0, &result, &key);
+    rsa_verify_hash_ex(RevSignature, MPQ_WEAK_SIGNATURE_SIZE, Md5Digest, sizeof(Md5Digest), LTC_PKCS_1_V1_5, hash_idx, 0, &result, &key);
     rsa_free(&key);
 
     // Return the result
@@ -480,7 +485,7 @@ static DWORD VerifyStrongSignatureWithKey(
     }
 
     // Verify the signature
-    if(rsa_verify_simple(reversed_signature, MPQ_STRONG_SIGNATURE_SIZE, padded_digest, MPQ_STRONG_SIGNATURE_SIZE, &result, &key) != CRYPT_OK)
+    if(rsa_verify_hash(reversed_signature, MPQ_STRONG_SIGNATURE_SIZE, padded_digest, sizeof(padded_digest), find_hash("md5"), 0, &result, &key) != CRYPT_OK)
         return ERROR_VERIFY_FAILED;
     
     // Free the key and return result
@@ -852,7 +857,7 @@ int SSignFileFinish(TMPQArchive * ha)
 
     // Sign the hash
     memset(WeakSignature, 0, sizeof(WeakSignature));
-    rsa_sign_hash_ex(Md5Digest, sizeof(Md5Digest), WeakSignature + 8, &signature_len, LTC_LTC_PKCS_1_V1_5, 0, 0, hash_idx, 0, &key);
+    rsa_sign_hash_ex(Md5Digest, sizeof(Md5Digest), WeakSignature + 8, &signature_len, LTC_PKCS_1_V1_5, 0, 0, hash_idx, 0, &key);
 	memrev(WeakSignature + 8, MPQ_WEAK_SIGNATURE_SIZE); 
     rsa_free(&key);
 
diff --git a/src/StormCommon.h b/src/StormCommon.h
index 95b72a3..a6545a5 100644
--- a/src/StormCommon.h
+++ b/src/StormCommon.h
@@ -51,7 +51,8 @@
 // Cryptography support
 
 // Headers from LibTomCrypt
-#include "libtomcrypt/src/headers/tomcrypt.h"
+#include "tomcrypt.h"
+#include "tommath.h"
 
 // For HashStringJenkins
 #include "jenkins/lookup.h"
